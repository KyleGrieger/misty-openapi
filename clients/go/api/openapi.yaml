openapi: 3.0.0
info:
  description: Misty Open API
  title: Misty API
  version: "1.0"
servers:
- description: misty
  url: http://localhost:3000
paths:
  /api/drive:
    post:
      description: Drive
      operationId: drive
      parameters:
      - explode: true
        in: query
        name: LinearVelocity
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: AngularVelocity
        required: false
        schema: {}
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            examples:
              example-1:
                value:
                  LinearVelocity: 5
                  AngularVelocity: 5
            schema:
              properties:
                LinearVelocity: {}
                AngularVelocity: {}
              type: object
        description: Drive
      responses:
        200:
          content:
            application/json:
              schema:
                description: response
                items:
                  $ref: '#/components/schemas/inline_response_200'
                title: response
                type: array
                x-examples:
                  example-1:
                  - result: true
                    status: Success
          description: OK
      summary: Drive
      x-openapi-router-controller: api
  /api/drive/stop:
    post:
      description: Stop
      operationId: stop
      responses:
        200:
          content:
            application/json:
              schema:
                description: response
                items:
                  $ref: '#/components/schemas/inline_response_200'
                title: response
                type: array
                x-examples:
                  example-1:
                  - result: true
                    status: Success
          description: OK
      summary: Stop
      x-openapi-router-controller: api
  /api/device:
    get:
      description: Get Device Information
      operationId: get_device_information
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
                title: device
                type: array
                x-examples:
                  get-device-information-example:
                  - result:
                      robotId: "12345"
                      serialNumber: "12345"
                      batteryLevel: 0.5
                      hardwareInfo: {}
                      ipAddress: 0.0.0.0
                      occipitalDeviceInfo: {}
                      outputCapabilities:
                      - sure
                      robotVersion: 1.0.0.0
                      sensorCapabilities:
                      - uh hunh
                      sensoryServiceAppVersion: 1.0.0.0
                      windowsOSVersion: 1.0.0.0
                    status: Success
          description: OK
      summary: Get Device Information
      tags: []
      x-openapi-router-controller: api
  /api/drive/track:
    post:
      description: Drive Track
      operationId: drive_track
      parameters:
      - explode: true
        in: query
        name: RightTrackSpeed
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: LeftTrackSpeed
        required: false
        schema: {}
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            examples:
              example-1:
                value:
                  LeftTrackSpeed: 30
                  RightTrackSpeed: 70
            schema:
              properties:
                RightTrackSpeed: {}
                LeftTrackSpeed: {}
              type: object
        description: Drive Track
      responses:
        200:
          content:
            application/json:
              schema:
                description: response
                items:
                  $ref: '#/components/schemas/inline_response_200'
                title: response
                type: array
                x-examples:
                  example-1:
                  - result: true
                    status: Success
          description: OK
      summary: Drive Track
      x-openapi-router-controller: api
  /api/drive/hdt:
    post:
      description: Drive Heading
      operationId: drive_heading
      parameters:
      - explode: true
        in: query
        name: Heading
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: Distance
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: TimeMS
        required: false
        schema: {}
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            examples:
              example-1:
                value:
                  Heading: 90
                  Distance: 1
                  TimeMs: 4000
            schema:
              properties:
                Heading: {}
                Distance: {}
                TimeMS: {}
              type: object
        description: Drive Heading
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
                title: device
                type: array
                x-examples:
                  get-device-information-example:
                  - result:
                      robotId: "12345"
                      serialNumber: "12345"
                      batteryLevel: 0.5
                      hardwareInfo: {}
                      ipAddress: 0.0.0.0
                      occipitalDeviceInfo: {}
                      outputCapabilities:
                      - sure
                      robotVersion: 1.0.0.0
                      sensorCapabilities:
                      - uh hunh
                      sensoryServiceAppVersion: 1.0.0.0
                      windowsOSVersion: 1.0.0.0
                    status: Success
          description: OK
      summary: Drive Heading
      x-openapi-router-controller: api
  /api/drive/time:
    post:
      description: Drive Time
      operationId: drive_time
      parameters:
      - explode: true
        in: query
        name: LinearVelocity
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: AngularVelocity
        required: false
        schema: {}
        style: form
      - explode: true
        in: query
        name: TimeMS
        required: false
        schema: {}
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            examples:
              example-1:
                value:
                  LinearVelocity: 1
                  AngularVelocity: 4
                  TimeMS: 500
            schema:
              properties:
                LinearVelocity: {}
                AngularVelocity: {}
                TimeMS: {}
              type: object
        description: Drive Time
      responses:
        200:
          content:
            application/json:
              schema:
                description: response
                items:
                  $ref: '#/components/schemas/inline_response_200'
                title: response
                type: array
                x-examples:
                  example-1:
                  - result: true
                    status: Success
          description: OK
      summary: Drive Time
      x-openapi-router-controller: api
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    response:
      description: response
      items:
        properties:
          result:
            type: boolean
          status:
            type: string
        type: object
      title: response
      type: array
      x-examples:
        example-1:
        - result: true
          status: Success
    device:
      description: device
      items:
        properties:
          result:
            properties:
              robotId: {}
              serialNumber: {}
              currentProfileName: {}
              hardwareInfo:
                type: object
              ipAddress: {}
              batteryLevel: {}
              occipitalDeviceInfo:
                type: object
              outputCapabilities:
                items: {}
                type: array
              robotVersion: {}
              sensoryServiceAppVersion: {}
              windowsOSVersion: {}
              sensorCapabilities:
                items: {}
                type: array
            type: object
          status: {}
        type: object
      title: device
      type: array
      x-examples:
        get-device-information-example:
        - result:
            robotId: "12345"
            serialNumber: "12345"
            batteryLevel: 0.5
            hardwareInfo: {}
            ipAddress: 0.0.0.0
            occipitalDeviceInfo: {}
            outputCapabilities:
            - sure
            robotVersion: 1.0.0.0
            sensorCapabilities:
            - uh hunh
            sensoryServiceAppVersion: 1.0.0.0
            windowsOSVersion: 1.0.0.0
          status: Success
    inline_object:
      properties:
        LinearVelocity: {}
        AngularVelocity: {}
      type: object
    inline_response_200:
      example:
        result: true
        status: status
      properties:
        result:
          type: boolean
        status:
          type: string
    _api_device_result:
      example:
        outputCapabilities:
        - ""
        - ""
        serialNumber: ""
        hardwareInfo: '{}'
        ipAddress: ""
        windowsOSVersion: ""
        currentProfileName: ""
        robotVersion: ""
        robotId: ""
        occipitalDeviceInfo: '{}'
        sensoryServiceAppVersion: ""
        sensorCapabilities:
        - ""
        - ""
        batteryLevel: ""
      properties:
        robotId: {}
        serialNumber: {}
        currentProfileName: {}
        hardwareInfo:
          type: object
        ipAddress: {}
        batteryLevel: {}
        occipitalDeviceInfo:
          type: object
        outputCapabilities:
          items: {}
          type: array
        robotVersion: {}
        sensoryServiceAppVersion: {}
        windowsOSVersion: {}
        sensorCapabilities:
          items: {}
          type: array
    inline_response_200_1:
      example:
        result:
          outputCapabilities:
          - ""
          - ""
          serialNumber: ""
          hardwareInfo: '{}'
          ipAddress: ""
          windowsOSVersion: ""
          currentProfileName: ""
          robotVersion: ""
          robotId: ""
          occipitalDeviceInfo: '{}'
          sensoryServiceAppVersion: ""
          sensorCapabilities:
          - ""
          - ""
          batteryLevel: ""
        status: ""
      properties:
        result:
          $ref: '#/components/schemas/_api_device_result'
        status: {}
    inline_object_1:
      properties:
        RightTrackSpeed: {}
        LeftTrackSpeed: {}
      type: object
    inline_object_2:
      properties:
        Heading: {}
        Distance: {}
        TimeMS: {}
      type: object
    inline_object_3:
      properties:
        LinearVelocity: {}
        AngularVelocity: {}
        TimeMS: {}
      type: object
